/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * @file hardware.h
 * @brief Project hardware configuration
 * @author Thomas Reidemeister
 *
 *                                      +----------+
 *                   T2/SS/PWM2P/P1.2 --+ 1     20 +-- P1.1/ADC1/TxD2/PWM1N
 *             T2CLKO/MOSI/PWM2N/P1.3 --+ 2     19 +-- P1.0/ADC0/RxD2/PWM1P
 *             I2CSDA/MISO/PWM3P/P1.4 --+ 3     18 +-- P3.7/INT3/TxD_2/CMP+
 *             I2CSCL/SCLK/PWM3N/P1.5 --+ 4     17 +-- P3.6/ADC14/INT2/RxD_2/CMP-
 *     XTAL0/MCLKO_2/RxD_3/PWM4P/P1.6 --+ 5     16 +-- P3.5/ADC13/T1/T0CLKO/SS_4/PWMFLT/PWMFLT2
 *      XTAL1/TxD_3/PWM5_2/PWM4N/P1.7 --+ 6     15 +-- P3.4/ADC12/T0/T1CLKO/MOSI_4/PWM4P_2/PWM8_2/CMPO
 *              MCLKO/RST/PWM6_2/P5.4 --+ 7     14 +-- P3.3/ADC11/INT1/MISO_4/I2CSDA_4/PWM4N_2/PWM7_2
 *                           Vcc/AVcc --+ 8     13 +-- P3.2/ADC10/INT0/SCLK_4/I2CSCL_4/PWMETI/PWMETI2
 *                          ADC_VRef+ --+ 9     12 +-- P3.1/ADC9/TxD
 *                           Gnd/AGnd --+ 10    11 +-- P3.0/ADC8/RxD/INT4
 *                                      +----------+
 *
 */
#ifndef HARDWARE_H
#define HARDWARE_H

#include "stc8h.h"

/******************************************************************************\
 * Public macros
\******************************************************************************/

#define CONF_IRCBAND 0x00                 ///< 20MHz Band IRC, 0x00 = 20MHz , 0x01 = 35MHz +/- trim
#define FIRC         22118400UL           ///< Target value for internal RC OSCILLATOR
#define CONF_CLKDIV  0x02                 ///< 1:2
#define FOSC         (FIRC / CONF_CLKDIV) ///< System clock frequency

#define CONF_PM0M0 \
  0b00000011 /**< Port 0 mode register 0: P0.0 and P0.1 are push-pull outputs, rest are quasi-bidirectional
    00000000 = reset value
    ||||||||
    |||||||+-- P1.0
    ||||||+--- P1.1
    |||||+---- P1.2
    ||||+----- P1.3
    |||+------ P1.4
    ||+------- P1.5
    |+-------- P1.6
    +--------- P1.7

*/

#define CONF_PM0M1 \
  0b00000000 /**< Port 0 mode register 1
    11111111 = reset value
    ||||||||
    |||||||+-- P1.0
    ||||||+--- P1.1
    |||||+---- P1.2
    ||||+----- P1.3
    |||+------ P1.4
    ||+------- P1.5
    |+-------- P1.6
    +--------- P1.7

*/

#define CONF_PM3M0 \
  0b00000000 /**< Port 3 mode register 0: P3.0 to P3.7 are quasi-bidirectional
    00000000 = reset value
    ||||||||
    |||||||+-- P3.0
    ||||||+--- P3.1
    |||||+---- P3.2
    ||||+----- P3.3
    |||+------ P3.4
    ||+------- P3.5
    |+-------- P3.6
    +--------- P3.7

*/

#define CONF_PM3M1 \
  0b00000000 /**< Port 3 mode register 1
    11111100 = reset value
    ||||||||
    |||||||+-- P3.0
    ||||||+--- P3.1
    |||||+---- P3.2
    ||||+----- P3.3
    |||+------ P3.4
    ||+------- P3.5
    |+-------- P3.6
    +--------- P3.7

*/

#define CONF_PM5M0 \
  0b00000000 /**< Port 5 mode register 0: P5.4 is quasi-bidirectional
    00000000 = reset value
    xxx|xxxx
       +------ P5.4

*/

#define CONF_PM5M1 \
  0b00000000 /**< Port 5 mode register 1
    11111111 = reset value
    xxx|xxxx
       +------ P5.4

*/

#define CONF_SCON0 \
  0b01000000 /**< UART control register 0
    00000000 = reset value
    ||||||||
    |||||||+-- RI     : Receive interrupt flag
    ||||||+--- TI     : Transmit interrupt flag
    |||||+---- RB8    : Receive bit 8
    ||||+----- TB8    : Transmit bit 8
    |||+------ REN    : Receiver enable bit
    ||+------- SM2    : 0 for UART mode, 1 for multiprocessor mode
    |+-------- SM1    : UART mode setting
    +--------- SM0/FE : UART mode setting

    Set PCON:SMOD0 to 0 for UART mode setting

    SM0 | SM1 | UART Mode
    ----+-----+-----------
     0  |  0  |  8-bit UART
     0  |  1  |  8-bit UART with variable baud rate (i.e. generated by timer)
     1  |  0  |  9-bit UART
     1  |  1  |  9-bit UART with variable baud rate (i.e. generated by timer)

*/

#define CONF_SCON2 \
  0b00000000 /**< UART control register 2
    01000000 = reset value
    |x||||||
    | |||||+-- RI
    | ||||+--- TI
    | |||+---- RB8
    | ||+----- TB8
    | |+------ REN
    | +------- SM2
    +--------- SM0/FE

*/

#define CONF_PSW1 \
  0b00000000 /**< Peripheral Port Switch Register 1
    00000000 = reset value
    ||xx||xx
    ||  ++---- SPI_Sx
    ++-------- S1_Sx

    S1_S[1:0] | RxD  | TxD     SPI_S[1:0] | SS   | MOSI | MISO | SCLK
    ----------+------+-----    -----------+------+------+------+------
    00        | P3.0 | P3.1    00         | P1.2 | P1.3 | P1.4 | P1.5
    01        | P3.6 | P3.7    01         | P2.2 | P2.3 | P2.4 | P2.5
    10        | P1.6 | P1.7    10         | P5.4 | P4.0 | P4.1 | P4.3
    11        | P4.3 | P4.4    11         | P3.5 | P3.4 | P3.3 | P3.2
*/



#define CONF_PSW2 \
  0b00000000 /**< Peripheral Port Switch Register 2
    00000000 = reset value
    | ||||||
    | |||||+-- S2_S   : UART2 Rx = P1.0 Tx = P1.1, 1 = P4.6 Tx = P4.7
    | ||||+--- S3_S   : UART3 Rx = P0.0 Tx = P0.1, 1 = P5.0 Tx = P5.1
    | |||+---- S4_S   : UART4 Rx = P0.2 Tx = P0.3, 1 = P5.2 Tx = P5.3
    | ||+----- CMPO_S : Comparator output 0 = P3.4, 1 = P4.1
    | ++------ I2C_Sx
    +--------- EAXFR  : Special register access enable

    I2C_S[1:0] | SCL  | SDA
    -----------+------+-----
    00         | P1.5 | P1.4
    01         | P2.5 | P2.4
    10         | P7.7 | P7.6
    11         | P3.3 | P3.3

*/

#define CONF_AUXR \
  0b01000000 /**< Auxiliary register
    00000000 = reset value
    ||||||||
    |||||||+-- S1ST2     : 0 Select Timer 1 as the baud-rate generator of UART1, 1 Select Timer 2 as the baud-rate generator of UART1
    ||||||+--- EXTRAM    : External RAM enable (0 = enabled)
    |||||+---- T2x12     : 0 The clock source of T2 is SYSclk/12, 1 The clock source of T2 is SYSclk/2
    ||||+----- T2_CT     : T2 is used as a timer, 0 = timer, 1 = counter
    |||+------ T2R       : T2 run control bit (1 = enable)
    ||+------- UART_M0x6 : 0 The baud-rate of UART in mode 0 is SYSclk/12, 1 The baud-rate of UART in mode 0 is SYSclk/2
    |+-------- T1x12     : 0 The clock source of T1 is SYSclk/12, 1 The clock source of T1 is SYSclk/2
    +--------- T0x12     : 0 The clock source of T0 is SYSclk/12, 1 The clock source of T0 is SYSclk/2
*/

#define BAUDRATE 115200
#define BRT (65536 - FOSC / BAUDRATE / 4)

/******************************************************************************\
 * Function Prototypes
\******************************************************************************/

void hardware_init();

#endif // HARDWARE_H
